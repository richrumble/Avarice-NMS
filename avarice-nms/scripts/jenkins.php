<?PHP function hashlittle2($inStr, $c, $b){  // $inStr  hash Input  // $c IN main Start Integer  // $b IN second Start Integer  $length = strlen($inStr);  $c += 3735928559 + $length;  // 3735928559 = 0xDEADBEEF  $a = $c;  $c += $b;  $b = $a;  //roll through inStr one byte at a time until length is less than 13  $i = 0;// Use increase $i to push to next byte   while ($length > 12){   	$a += ord($inStr{$i++})<<24;   	$a += ord($inStr{$i++})<<16;   	$a += ord($inStr{$i++})<<8;   	$a += ord($inStr{$i++});   	$b += ord($inStr{$i++})<<24;   	$b += ord($inStr{$i++})<<16;   	$b += ord($inStr{$i++})<<8;   	$b += ord($inStr{$i++});   	$c += ord($inStr{$i++})<<24;   	$c += ord($inStr{$i++})<<16;   	$c += ord($inStr{$i++})<<8;   	$c += ord($inStr{$i++});// $i = 12 after inc   	  //mix($a,$b,$c);// don't call function for speed increase   	$a-=$c;   	$a^=($c<<4)|($c>>28);  //rot($c,4);   	$c+=$b;   	$b-=$a;   	$b^=($a<<6)|($a>>26);  //rot($a,6);   	$a+=$c;   	$c-=$b;   	$c^=($b<<8)|($b>>24);  //rot($b,8);   	$b+=$a;   	$a-=$c;   	$a^=($c<<16)|($c>>16)  ;//rot($c,16);   	$c+=$b;   	$b-=$a;   	$b^=($a<<19)|($a>>13)  ;//rot($a,19);   	$a+=$c;   	$c-=$b;   	$c^=($b<<4)|($b>>28);  //rot($b,4);   	$b+=$a;   	$length-=12;   }  switch($length){  // add each remaining byte according to length left      case 12: $c+=ord($inStr{$i+11});      case 11: $c+=ord($inStr{$i+10})<<8;      case 10: $c+=ord($inStr{$i+9})<<16;      case 9 : $c+=ord($inStr{$i+8})<<24;      case 8 : $b+=ord($inStr{$i+7});      case 7 : $b+=ord($inStr{$i+6})<<8;      case 6 : $b+=ord($inStr{$i+5})<<16;      case 5 : $b+=ord($inStr{$i+4})<<24;      case 4 : $a+=ord($inStr{$i+3});      case 3 : $a+=ord($inStr{$i+2})<<8;      case 2 : $a+=ord($inStr{$i+1})<<16;      case 1 : $a+=ord($inStr{$i})<<24; break;      case 0 : return array($c,$b,$a);  // do NOT finalize if there are no changes (additions)  }  //final($a,$b,$c);  $c^=$b; $c-=($b<<14)|($b>>18);  //rot($b,14);  $a^=$c; $a-=($c<<11)|($c>>21);  //rot($c,11);  $b^=$a; $b-=($a<<25)|($a>>7);   //rot($a,25);  $c^=$b; $c-=($b<<16)|($b>>16);  //rot($b,16);  $a^=$c; $a-=($c<<4)|($c>>28);   //rot($c,4);  $b^=$a; $b-=($a<<14)|($a>>18);  //rot($a,14);  $c^=$b; $c-=($b<<24)|($b>>8);   //rot($b,24);  return array($c,$b,$a); } $inStr = 'Four score and seven years ago'; $int1 = 88; $int2 = 17; $re1 = hashlittle2($inStr, $int1, $int2); echo '<br>hashlittle2= ',$re1[0], ' [1] ',$re1[1], ' [2] ',$re1[2];?>